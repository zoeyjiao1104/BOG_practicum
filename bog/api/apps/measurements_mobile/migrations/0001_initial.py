# Generated by Django 4.0 on 2022-09-14 15:01

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sources', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='MobileMeasurementEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(verbose_name='Datetime of measurement event')),
                ('anomaly_score', models.FloatField(null=True)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Latitude of measurement event')),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9, verbose_name='Longitude of measurement event')),
                ('is_prediction', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['datetime'],
            },
        ),
        migrations.CreateModel(
            name='MobileSensor',
            fields=[
                ('id', models.CharField(max_length=24, primary_key=True, serialize=False)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sources.source')),
            ],
        ),
        migrations.CreateModel(
            name='MobileMeasurementEventNeighbor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.DecimalField(decimal_places=10, max_digits=20, verbose_name='Distance from neighbor in radians.')),
                ('mobile_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_event', to='measurements_mobile.mobilemeasurementevent')),
                ('neighboring_mobile_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neighboring_mobile_event', to='measurements_mobile.mobilemeasurementevent')),
            ],
        ),
        migrations.AddField(
            model_name='mobilemeasurementevent',
            name='mobile_sensor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_measurement_event', to='measurements_mobile.mobilesensor'),
        ),
        migrations.CreateModel(
            name='MobileMeasurement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(choices=[('wl', 'Water Level'), ('at', 'Air Temperature'), ('wt', 'Water Temperature'), ('bt', 'Battery Temperature'), ('ws', 'Wind Speed'), ('wd', 'Wind Direction'), ('cs', 'Current Speed'), ('cd', 'Current Direction'), ('bs', 'Buoy Speed'), ('bd', 'Buoy Direction'), ('wcd', 'Wind Cardinal Direction'), ('wgs', 'Wind Gust Speed'), ('w', 'Wind'), ('t', 'Tide'), ('cb', 'Current Bin'), ('cfd', 'Current Flood Direction'), ('ced', 'Current Ebb Direction'), ('cdpth', 'Current Depth'), ('cvm', 'Current Velocity Major'), ('depth', 'Depth'), ('plon', 'Previous Longitude'), ('plat', 'Previous Latitude'), ('a', 'Acceleration'), ('uct', 'UC Temperature'), ('pd', 'Position Delta'), ('momsn', 'momsn'), ('ice', 'Ice percent'), ('err', 'Err (Celsius)'), ('anom', 'Anom (Celsius)'), ('sst', 'Sst (Celsius)'), ('wp', 'Water Pressure'), ('sl', 'Salinity'), ('zc', 'Zonal Current'), ('mc', 'Meridonal Current'), ('lat', 'Latitude'), ('lon', 'Longitude')], max_length=5, null=True)),
                ('value', models.CharField(max_length=10, null=True)),
                ('type', models.CharField(choices=[('r', 'Raw'), ('q1', 'First Quartile'), ('q2', 'Second Quartile'), ('q3', 'Third Quartile'), ('m', 'Mean'), ('pr', 'Prediction'), ('prhl', 'Prediction Highs Lows'), ('in', 'Interpolation'), ('qf', 'Quartod Flags'), ('sd', 'Standard Deviation'), ('q', 'Quality'), ('prm', 'Prediction Mean'), ('prb', 'Prediction Bores')], max_length=5, null=True)),
                ('quality', models.CharField(choices=[('g', 'Good'), ('na', 'Not evaluated or unknown'), ('s', 'Suspect data'), ('b', 'Bad Data')], max_length=2, null=True)),
                ('confidence', models.FloatField(null=True, verbose_name='Confidence in measurement, 1 for observations, [0,1] for predictions')),
                ('mobile_measurement_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='measurements_mobile.mobilemeasurementevent')),
            ],
        ),
        migrations.AddConstraint(
            model_name='mobilemeasurementeventneighbor',
            constraint=models.UniqueConstraint(fields=('mobile_event', 'neighboring_mobile_event'), name='unique_mobile_measurement_event_neighbor'),
        ),
        migrations.AddConstraint(
            model_name='mobilemeasurementevent',
            constraint=models.UniqueConstraint(fields=('latitude', 'longitude', 'datetime', 'mobile_sensor'), name='unique_mobile_measurement_event'),
        ),
        migrations.AddConstraint(
            model_name='mobilemeasurement',
            constraint=models.UniqueConstraint(fields=('product', 'value', 'type', 'quality', 'mobile_measurement_event'), name='unique_mobile_measurement'),
        ),
    ]
